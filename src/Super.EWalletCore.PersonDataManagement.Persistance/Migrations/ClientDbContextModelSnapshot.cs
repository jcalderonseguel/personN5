// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Super.EWalletCore.PersonDataManagement.Persistance;

namespace Super.EWalletCore.PersonDataManagement.Persistance.Migrations
{
    [DbContext(typeof(ClientDbContext))]
    partial class ClientDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AddressType")
                        .HasColumnType("int");

                    b.Property<string>("BuildingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coname")
                        .HasColumnName("COName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<long?>("PersonPersonNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("PoboxPostalCode")
                        .HasColumnName("POBoxPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOfficeBoxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusCodeAddress")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("PersonPersonNumber")
                        .HasName("IX_FK_PersonAddressData");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Attachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EncodedKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<long?>("IdentificationDocumentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PersonNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdentificationDocumentId")
                        .HasName("IX_FK_IdentificationDocumentAttachment");

                    b.HasIndex("PersonNumber")
                        .HasName("IX_FK_PersonAttachment");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Email", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PersonNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ValidFrom")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Validated")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PersonNumber")
                        .HasName("IX_FK_PersonEmail");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.IdentificationDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<int>("IdentificationDocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("IssuingAuthority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IssuingDate")
                        .HasColumnType("datetime");

                    b.Property<long>("PersonNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ValidFrom")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdentificationDocumentTypeId")
                        .HasName("IX_FK_IdentificationDocumentTypeIdentificationDocument");

                    b.HasIndex("PersonNumber")
                        .HasName("IX_FK_PersonIdentificationDocument");

                    b.ToTable("IdentificationDocument");
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.IdentificationDocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("CheckDigit")
                        .HasColumnType("bit");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId")
                        .HasName("IX_FK_CountryIdentificationDocumentType");

                    b.ToTable("IdentificationDocumentType");
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Income", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Currency")
                        .HasColumnType("int");

                    b.Property<int?>("Periodicity")
                        .HasColumnType("int");

                    b.Property<long?>("PersonNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ValidFrom")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("Id");

                    b.HasIndex("PersonNumber")
                        .HasName("IX_FK_NaturalPersonIncome");

                    b.ToTable("Income");
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.LegalPerson", b =>
                {
                    b.Property<long>("PersonNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonNumber");

                    b.ToTable("LegalPerson");
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.NaturalPerson", b =>
                {
                    b.Property<long>("PersonNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("BirthDate")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateOfDeath")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastNamePrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<int?>("Nationality")
                        .HasColumnType("int");

                    b.HasKey("PersonNumber");

                    b.HasIndex("GenderId")
                        .HasName("IX_FK_GenderNaturalPerson");

                    b.ToTable("NaturalPerson");
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Person", b =>
                {
                    b.Property<long>("PersonNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("PersonNumber");

                    b.HasIndex("RoleId")
                        .HasName("IX_FK_RolePerson");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Phone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PersonNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidFrom")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("PersonNumber")
                        .HasName("IX_FK_PersonPhone");

                    b.ToTable("Phone");
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidFrom")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Address", b =>
                {
                    b.HasOne("Super.EWalletCore.PersonDataManagement.Domain.Entities.Person", "PersonPersonNumberNavigation")
                        .WithMany("Address")
                        .HasForeignKey("PersonPersonNumber")
                        .HasConstraintName("FK_PersonAddressData")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Attachment", b =>
                {
                    b.HasOne("Super.EWalletCore.PersonDataManagement.Domain.Entities.IdentificationDocument", "IdentificationDocument")
                        .WithMany("Attachment")
                        .HasForeignKey("IdentificationDocumentId")
                        .HasConstraintName("FK_IdentificationDocumentAttachment")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Super.EWalletCore.PersonDataManagement.Domain.Entities.Person", "PersonNumberNavigation")
                        .WithMany("Attachment")
                        .HasForeignKey("PersonNumber")
                        .HasConstraintName("FK_PersonAttachment")
                        .IsRequired();
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Email", b =>
                {
                    b.HasOne("Super.EWalletCore.PersonDataManagement.Domain.Entities.Person", "PersonNumberNavigation")
                        .WithMany("Email")
                        .HasForeignKey("PersonNumber")
                        .HasConstraintName("FK_PersonEmail")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.IdentificationDocument", b =>
                {
                    b.HasOne("Super.EWalletCore.PersonDataManagement.Domain.Entities.IdentificationDocumentType", "IdentificationDocumentType")
                        .WithMany("IdentificationDocument")
                        .HasForeignKey("IdentificationDocumentTypeId")
                        .HasConstraintName("FK_IdentificationDocumentTypeIdentificationDocument")
                        .IsRequired();

                    b.HasOne("Super.EWalletCore.PersonDataManagement.Domain.Entities.Person", "PersonNumberNavigation")
                        .WithMany("IdentificationDocument")
                        .HasForeignKey("PersonNumber")
                        .HasConstraintName("FK_PersonIdentificationDocument")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.IdentificationDocumentType", b =>
                {
                    b.HasOne("Super.EWalletCore.PersonDataManagement.Domain.Entities.Country", "Country")
                        .WithMany("IdentificationDocumentType")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_CountryIdentificationDocumentType")
                        .IsRequired();
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Income", b =>
                {
                    b.HasOne("Super.EWalletCore.PersonDataManagement.Domain.Entities.NaturalPerson", "PersonNumberNavigation")
                        .WithMany("Income")
                        .HasForeignKey("PersonNumber")
                        .HasConstraintName("FK_NaturalPersonIncome")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.LegalPerson", b =>
                {
                    b.HasOne("Super.EWalletCore.PersonDataManagement.Domain.Entities.Person", "PersonNumberNavigation")
                        .WithOne("PersonLegalPerson")
                        .HasForeignKey("Super.EWalletCore.PersonDataManagement.Domain.Entities.LegalPerson", "PersonNumber")
                        .HasConstraintName("FK_LegalPerson_inherits_Person")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.NaturalPerson", b =>
                {
                    b.HasOne("Super.EWalletCore.PersonDataManagement.Domain.Entities.Gender", "Gender")
                        .WithMany("PersonNaturalPerson")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_GenderNaturalPerson")
                        .IsRequired();

                    b.HasOne("Super.EWalletCore.PersonDataManagement.Domain.Entities.Person", "PersonNumberNavigation")
                        .WithOne("PersonNaturalPerson")
                        .HasForeignKey("Super.EWalletCore.PersonDataManagement.Domain.Entities.NaturalPerson", "PersonNumber")
                        .HasConstraintName("FK_NaturalPerson_inherits_Person")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Person", b =>
                {
                    b.HasOne("Super.EWalletCore.PersonDataManagement.Domain.Entities.Role", "Role")
                        .WithMany("Person")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_RolePerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Super.EWalletCore.PersonDataManagement.Domain.Entities.Phone", b =>
                {
                    b.HasOne("Super.EWalletCore.PersonDataManagement.Domain.Entities.Person", "PersonNumberNavigation")
                        .WithMany("Phone")
                        .HasForeignKey("PersonNumber")
                        .HasConstraintName("FK_PersonPhone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
